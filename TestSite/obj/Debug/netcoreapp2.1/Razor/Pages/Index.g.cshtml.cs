#pragma checksum "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "152ff3585b9eb2f9d3f81132d97b0610df81cdc3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TestSite.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(TestSite.Pages.Pages_Index), null)]
namespace TestSite.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
#line 8 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Index.cshtml"
using System.Linq;

#line default
#line hidden
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using TestSite;

#line default
#line hidden
#line 3 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using TestSite.Data;

#line default
#line hidden
#line 7 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Index.cshtml"
using TestSite.Classes;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"152ff3585b9eb2f9d3f81132d97b0610df81cdc3", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc6b36d787dd0b4a1dd3a5b1e7dc018ea14a2c2d", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(26, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(113, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(161, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 10 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Index.cshtml"
  
    DBParams db = new DBParams(UserManager, context);
    db.User = User;
    var Products = context.Product;
    ViewData["Title"] = "Main page";

#line default
#line hidden
            BeginContext(321, 3338, true);
            WriteLiteral(@"
<h2>Shop</h2>

<div class=""container"" style=""background-color: #dedede; text-align: center"" id=""ProductList"">
</div>

<div class=""modal fade"" id=""CreateOrder"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""modal-title"">
                    Adding product to the cart
                </h3>
            </div>
            <div class=""modal-body"">
                <div class=""form-group"">
                    <label class=""control-label"">Product Name</label>
                    <div class=""well"" style=""margin-bottom: 0px; padding: 1%; background-color: #d2d2d2;"" id=""CreateName""><h3 style=""margin:auto"">Test</h3></div>
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Amount</label>
                    <div class=""input-group"">
                        <input class=""form-control"" id=""CreateAmount"" type=""number"" min=""1"" value=""1""/>
 ");
            WriteLiteral(@"                       <span class=""input-group-addon"" id=""PriceAddon"">0 $</span>
                    </div>             
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-success"" id=""OrderSubmit"">
                <span class=""glyphicon glyphicon-plus-sign""></span>
                Add to cart</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
            </div>
            <input type=""hidden"" id=""CreateOrderID""/>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""Cart"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""modal-title"">
                    Your cart
                </h3>
            </div>
            <div class=""modal-body"">
                <table class=""table table-bordered"">
                    <thead><tr>
            ");
            WriteLiteral(@"            <th>Item Name</th>
                        <th>Amount</th>
                        <th>Price per item</th>
                        <th>Total</th>
                        </tr></thead>
                    <tbody id=""CartElements"">
                    </tbody>
                </table>
            </div>
            <div class=""modal-footer"">
                <h3 id=""CartAllPrice"">Total price: 22 $</h3>
                <button type=""button"" class=""btn btn-primary"" id=""CartSave"">Save changes</button>
                <button type=""button"" class=""btn btn-success"" id=""CartSubmit"">Checkout</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" id=""CartClose"">Close</button>
            </div>
        </div>
    </div>
</div>

<button type=""button"" style=""position: absolute;bottom: 30px;right: 30px;width: auto;height: 43px;"" class=""btn btn-success pull-right bottom-right"" id=""CartButton"">
    <b>Cart</b>
    <span class=""badge badge-success"" style=""");
            WriteLiteral(@"
    color: white;
    background-color: #318c31;
    border-radius: 5px;
    font-size: inherit;
""
          id=""CartBadgeNumber"">0</span>
</button>

<div class=""sidenav"" id=""Sidenav"">
    <div class=""btn-group-vertical btn-block"" data-toggle=""buttons"">
");
            EndContext();
#line 97 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Index.cshtml"
         foreach(var i in Model.Categories)
        {

#line default
#line hidden
            BeginContext(3715, 68, true);
            WriteLiteral("            <label class=\"btn btn-primary\"><input type=\"checkbox\" />");
            EndContext();
            BeginContext(3784, 1, false);
#line 99 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Index.cshtml"
                                                               Write(i);

#line default
#line hidden
            EndContext();
            BeginContext(3785, 10, true);
            WriteLiteral("</label>\r\n");
            EndContext();
#line 100 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Index.cshtml"
        }

#line default
#line hidden
            BeginContext(3806, 22, true);
            WriteLiteral("    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(3846, 8217, true);
                WriteLiteral(@"
    <script>
        var Products;
        var Discount;
        var Order;
        var Orders;
        var SelectedItem;
        var OrderElementDetails = {};

        $(""#Sidenav"").children().change(CheckNewFilters);
        $(""#CartButton"").click(function () { $(""#Cart"").modal(""show"") });
        $(""#OrderSubmit"").click(AddToCart);
        $(""#CartSave"").click(UpdateOrders);
        $(""#CartSubmit"").click(Checkout);
         
        $(""document"").ready(function () {
            $(""#MainBody"")[0].style.marginLeft = ""250px"";

            $.ajax({
                url: ""/controllers/user/GetProducts"",
                success: function (result) {
                    Products = result;
                    for (i in Products) {
                        OrderElementDetails[Products[i].id] = { name: Products[i].name };
                    }
                    $.ajax({
                        url: ""/controllers/user/GetUserDiscount"",
                        success: function (result) {
");
                WriteLiteral(@"                            Discount = result;
                            loadProducts();
                            GetCurrentOrder();
                        }
                    });
                }
            });
        })

        $(""#CreateAmount"").on(""input"", function () {
            var amount = Number($(""#CreateAmount"").val());
            
            if (!isNaN(amount)) {
                if (amount < 1) {
                    if (amount >= 0) { $(""#CreateAmount"").val(1); }
                    else if (amount < 0) { $(""#CreateAmount"").val(amount * -1);}
                }
                $(""#CreateAmount"").val(Math.floor(amount));
                $(""#PriceAddon"").text(`${SelectedItem.price * $(""#CreateAmount"").val()} $`);
            }
        })

        function loadProducts(filter) {
            var ProductList = $(""#ProductList"");
            ProductList.empty();
            var filtered

            if (filter != null && filter.length != 0) filtered = Products.fi");
                WriteLiteral(@"lter(function (i) { return filter.includes(i.category); });
            else filtered = Products;          

            for (i = 0; i < Math.ceil(filtered.length / 6); i++) {
                var mess = """";
                for (j = 0; j < 6 && j < filtered.length - i * 6; j++) {
                    var Product = filtered[i * 6 + j];
                    var DP = Math.ceil(Product.price / 100 * (100 - Discount))

                    mess = mess + `<div class=""col-xs-2""><div class=""panel panel-primary""><div class=""panel-heading""><h5 style=""margin:auto"">${Product.category}</h5></div><div class=""panel-body""><h3 style=""margin:auto"">${Product.name}</h3></div><div class=""panel-footer""><button class=""btn btn-success btn-block""><h3 style=""margin:auto"">${DP} $</h3></button></div><input type=""hidden"" value=""${Product.id}"" id=""ID""/></div></div>`
                }
                ProductList.append(`<div class=""row"">${mess}</div>`);
            }

            $(""#ProductList .btn.btn-success.btn-block"").click");
                WriteLiteral(@"(ShowOrderModal);
        }

        function CheckNewFilters() {
            var ActiveFilters = []
            var filters = $($(""#Sidenav"").children()).children();
            for (var i = 0; i < filters.length; i++) {
                if ($(filters[i]).hasClass(""active"")) {
                    ActiveFilters.push($(filters[i]).text());
                }
            }
            loadProducts(ActiveFilters);
        }

        function GetCurrentOrder() {
            $.ajax({
                url: ""/controllers/user/GetUnfinishedOrder"",
                success: function (result) {
                    Order = result;
                    UpdateCartInfo();
                }
            });
        }

        function UpdateCartInfo() {
            $.ajax({
                url: ""/controllers/user/GetOrderElementsByID?id="" + Order.id,
                success: function (result) {
                    Orders = result;
                    $(""#CartBadgeNumber"").text(Orders.length);
       ");
                WriteLiteral(@"             LoadOrderElements();
                }
            });
        }

        function ShowOrderModal() {
            $(""#CreateOrder"").modal(""show"");
            var panel = $(this).parent().parent();
            var info = { panel: panel, category: panel.children("".panel-heading"").find(""h5"").text(), name: panel.children("".panel-body"").find(""h3"").text(), price: panel.children("".panel-footer"").find(""h3"").text().split("" "")[0], id: panel.children(""#ID"").val() };

            SelectedItem = info;

            $(""#CreateName"").text(info.name);
            $(""#CreateAmount"").val(""1"");
            $(""#PriceAddon"").text(`${info.price * $(""#CreateAmount"").val()} $`);
            $(""#CreateOrderID"").val(info.id);
        }

        function LoadOrderElements() {
            $(""#CartElements"").empty();

            for (i = 0; i < Orders.length; i++) {
                $(""#CartElements"").append(`<tr><td>${OrderElementDetails[Orders[i].item_ID].name}</td><td><input class=""form-control"" id=""");
                WriteLiteral(@"CreateAmount"" type=""number"" min=""1"" value=""${Orders[i].items_Count}""/></td><td id = ""CartPrice"">${Orders[i].item_Price} $</td><td id = ""CartTotalPrice"">${Orders[i].items_Count * Orders[i].item_Price} $</td><td><button class=""btn-block btn-danger""><span class=""glyphicon glyphicon-remove-sign""></span></button></td><input type=""hidden"" value=""${Orders[i].id}""/></tr>`);
            }

            UpdateTotalPrice();

            $(""#CartElements button.btn-block"").click(DeleteCartElement);            
            $(""#CartElements tr td #CreateAmount"").on(""input"", UpdateCartPrice);
        }

        function AddToCart() {
            var form = { Item_ID: $(""#CreateOrderID"").val(), Order_ID: Order.id, Items_Count: $(""#CreateAmount"").val() };

            $.ajax({
                url: ""/controllers/user/AddItemToCart"",
                method: ""POST"",
                contentType: ""application/json"",
                data: JSON.stringify(form),
                success: function () { $(""#CreateOrder"")");
                WriteLiteral(@".modal(""hide""); UpdateCartInfo(); }
            });
        }

        function DeleteCartElement() {
            var id = $(this).parentsUntil(""tbody"").children(""input:hidden"").val();
            $.ajax({
                url: ""/controllers/user/DeleteCartItemByID?id=""+id,
                method: ""DELETE"",
                success: function () { UpdateCartInfo(); }
            });
        }

        function UpdateOrders() {
            var form = [{}];
            var CartElement = $($(""#CartElements"").children());

            for (i = 0; i < CartElement.length; i++) {
                form[i] = { id: $(CartElement.children(""input"")[i]).val(), items_Count: $(CartElement.find(""td input"")[i]).val()};
            }

            $.ajax({
                url: ""/controllers/user/UpdateCart"",
                method: ""PUT"",
                traditional: true,
                contentType: ""application/json; charset=utf-8"",
                data: JSON.stringify(form),
                success: f");
                WriteLiteral(@"unction () { UpdateCartInfo(); }
            });
        }

        function UpdateCartPrice() {
            var trigger = $(this);
            var price = trigger.parents(""tr"").children(""#CartPrice"").text().split("" "")[0];

            trigger.parents(""tr"").children(""#CartTotalPrice"").text(price * trigger.val() + "" $"");

            UpdateTotalPrice();
        }

        function Checkout() {
            $.ajax({
                url: ""/controllers/user/SubmitOrder"",
                method: ""PUT"",
                success: function () { alert(""Order submitted!""); $(""#Cart"").modal(""hide""); GetCurrentOrder(); }
            });
        }

        function UpdateTotalPrice() {
            var totalPrice = 0;

            var prices = $(""#CartElements #CartTotalPrice"");

            for (i = 0; i < prices.length; i++) {
                totalPrice += Number($(prices[i]).text().split("" "")[0]);
            }

            $(""#CartAllPrice"").text(`Total price: ${totalPrice} $`);
        }
");
                WriteLiteral("        \r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<IdentityUser> UserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ApplicationDbContext context { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
