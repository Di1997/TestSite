#pragma checksum "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "973beb3406873de17189ce0239eb13fe71b3a2a6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TestSite.Pages.Admin.Pages_Admin_Products), @"mvc.1.0.razor-page", @"/Pages/Admin/Products.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Admin/Products.cshtml", typeof(TestSite.Pages.Admin.Pages_Admin_Products), null)]
namespace TestSite.Pages.Admin
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using TestSite;

#line default
#line hidden
#line 3 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using TestSite.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"973beb3406873de17189ce0239eb13fe71b3a2a6", @"/Pages/Admin/Products.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc6b36d787dd0b4a1dd3a5b1e7dc018ea14a2c2d", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Admin_Products : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(50, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(90, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 6 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml"
  
    var Products = context.Product;

    ViewData["Title"] = "Products";

#line default
#line hidden
            BeginContext(175, 365, true);
            WriteLiteral(@"
<h2>Products</h2>

<table class=""table table-striped table-bordered table-hover"">
    <thead>
        <tr>
            <th scope=""col"">ID</th>
            <th scope=""col"">Code</th>
            <th scope=""col"">Name</th>
            <th scope=""col"">Price</th>
            <th scope=""col"">Category</th>
        </tr>
    </thead>
    <tbody id=""Table"">
");
            EndContext();
#line 25 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml"
         foreach (var i in Products)
        {

#line default
#line hidden
            BeginContext(589, 38, true);
            WriteLiteral("            <tr>\r\n                <td>");
            EndContext();
            BeginContext(628, 4, false);
#line 28 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml"
               Write(i.ID);

#line default
#line hidden
            EndContext();
            BeginContext(632, 27, true);
            WriteLiteral("</td>\r\n                <td>");
            EndContext();
            BeginContext(660, 6, false);
#line 29 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml"
               Write(i.Code);

#line default
#line hidden
            EndContext();
            BeginContext(666, 27, true);
            WriteLiteral("</td>\r\n                <td>");
            EndContext();
            BeginContext(694, 6, false);
#line 30 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml"
               Write(i.Name);

#line default
#line hidden
            EndContext();
            BeginContext(700, 27, true);
            WriteLiteral("</td>\r\n                <td>");
            EndContext();
            BeginContext(728, 7, false);
#line 31 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml"
               Write(i.Price);

#line default
#line hidden
            EndContext();
            BeginContext(735, 27, true);
            WriteLiteral("</td>\r\n                <td>");
            EndContext();
            BeginContext(763, 10, false);
#line 32 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml"
               Write(i.Category);

#line default
#line hidden
            EndContext();
            BeginContext(773, 26, true);
            WriteLiteral("</td>\r\n            </tr>\r\n");
            EndContext();
#line 34 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Products.cshtml"
        }

#line default
#line hidden
            BeginContext(810, 3906, true);
            WriteLiteral(@"    </tbody>
</table>

<button type=""button"" class=""btn btn-primary"" id=""AddProduct"">Add product</button>

<div class=""modal fade"" id=""Editor"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""modal-title"">
                    Edit product
                </h3>
            </div>
            <div class=""modal-body"">
                <div class=""form-group"">
                    <label class=""control-label"">ID</label>
                    <input class=""form-control"" id=""EditID"" type=""text"" placeholder=""There will be ID"" readonly />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Code</label>
                    <input class=""form-control"" id=""EditCode"" type=""text"" placeholder=""There will be Code"" readonly />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Name</lab");
            WriteLiteral(@"el>
                    <input class=""form-control"" id=""EditName"" type=""text"" placeholder=""There will be Name"" />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Price</label>
                    <input class=""form-control"" id=""EditPrice"" type=""text"" placeholder=""There will be Price"" />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Category</label>
                    <input class=""form-control"" id=""EditCategory"" type=""text"" placeholder=""There will be Category"" />
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" id=""delete"">Delete product</button>
                <button type=""button"" class=""btn btn-primary"" id=""submit"">Save changes</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
            </div>
        </div");
            WriteLiteral(@">
    </div>
</div>

<div class=""modal fade"" id=""Create"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""modal-title"">
                    Add product
                </h3>
            </div>
            <div class=""modal-body"">
                <div class=""form-group"">
                    <label class=""control-label"">ID</label>
                    <input class=""form-control"" id=""CreateID"" type=""text"" placeholder=""Create ID"" readonly />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Code</label>
                    <input class=""form-control"" id=""CreateCode"" type=""text"" placeholder=""Create Code"" readonly />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Name</label>
                    <input class=""form-control"" id=""CreateName"" type=""text"" placeholder=""Crea");
            WriteLiteral(@"te Name"" />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Price</label>
                    <input class=""form-control"" id=""CreatePrice"" type=""text"" placeholder=""Create Price"" />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Category</label>
                    <input class=""form-control"" id=""CreateCategory"" type=""text"" placeholder=""Create Category"" />
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" id=""add"">Add product</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(4734, 3588, true);
                WriteLiteral(@"
    <script>

        $(""#submit"").click(formSubmit);
        $(""#delete"").click(formDelete);
        $(""#AddProduct"").click(addProduct);
        $(""#add"").click(submitNewProduct);

        $(""#Table"").children().on(""click"", edit);

        function edit() {
            var caller = $(this);
            var modal = $(""#Editor"");

            $(""#EditID"").val($(caller.children()[0]).text());
            $(""#EditCode"").val($(caller.children()[1]).text());
            $(""#EditName"").val($(caller.children()[2]).text());
            $(""#EditPrice"").val($(caller.children()[3]).text());
            $(""#EditCategory"").val($(caller.children()[4]).text());

            modal.modal('show');
        }

        function addProduct() {
            $.ajax({
                url: ""/controllers/admin/GenerateProductInfo"",
                method: ""GET"",
                success: function (result) {
                    $(""#CreateID"").val(result.id);
                    $(""#CreateCode"").val(result.cod");
                WriteLiteral(@"e);
                    $(""#Create"").modal(""show"");
                }
            });

            
        }

        function submitNewProduct() {

            var form = {
                ID: $(""#CreateID"").val(),
                Code: $(""#CreateCode"").val(),
                Name: $(""#CreateName"").val(),
                Price: Number($(""#CreatePrice"").val()),
                Category: $(""#CreateCategory"").val()
            };

            if (form.ID == """" || form.Code == """" || form.Name == """" || form.Price == """" || form.Category == """") {
                alert(""All fields must be filled!"");
                return false;
            }

            if (isNaN(form.Price) || !Number.isInteger(form.Price)) {
                alert(""Invalid Price! Price must be a number!"");
                return false;
            }

            $.ajax({
                url: ""/controllers/admin/AddProduct"",
                method: ""POST"",
                contentType: ""application/json"",
          ");
                WriteLiteral(@"      data: JSON.stringify(form),
                success: function () { $(""#Create"").modal(""hide""); location.reload(); }
            });

            return true;
        }

        function formSubmit() {

            var form = {
                ID: $(""#EditID"").val(),
                Code: $(""#EditCode"").val(),
                Name: $(""#EditName"").val(),
                Price: Number($(""#EditPrice"").val()),
                Category: $(""#EditCategory"").val()
            };

            if (form.ID == """" || form.Code == """" || form.Name == """" || form.Price == """" || form.Category == """")
            {
                alert(""All fields must be filled!"");
                return false;
            }

            else if (isNaN(form.Price) || !Number.isInteger(form.Price)) {
                alert(""Invalid Price! Price must be a number!"");
                return false;
            }

            $.ajax({
                url: ""/controllers/admin/UpdateProduct"",
                method: """);
                WriteLiteral(@"PUT"",
                contentType: ""application/json"",
                data: JSON.stringify(form),
                success: function () { location.reload(); }
            });

            return true;
        }

        function formDelete() {
            $.ajax({
                url: ""/controllers/admin/DeleteProduct?id="" + $(""#EditID"").val(),
                method: ""DELETE"",
                success: function () { location.reload(); }
            });

            
        }

    </script>
");
                EndContext();
            }
            );
            BeginContext(8323, 1, true);
            WriteLiteral(" ");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ApplicationDbContext context { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TestSite.Pages.Admin.ProductsModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TestSite.Pages.Admin.ProductsModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TestSite.Pages.Admin.ProductsModel>)PageContext?.ViewData;
        public TestSite.Pages.Admin.ProductsModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
