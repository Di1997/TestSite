#pragma checksum "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Users.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "924a15dc647c79a3271fd41731969a615d19e332"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TestSite.Pages.Admin.Pages_Admin_Users), @"mvc.1.0.razor-page", @"/Pages/Admin/Users.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Admin/Users.cshtml", typeof(TestSite.Pages.Admin.Pages_Admin_Users), null)]
namespace TestSite.Pages.Admin
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using TestSite;

#line default
#line hidden
#line 3 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using TestSite.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"924a15dc647c79a3271fd41731969a615d19e332", @"/Pages/Admin/Users.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc6b36d787dd0b4a1dd3a5b1e7dc018ea14a2c2d", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Admin_Users : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(47, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Users.cshtml"
   ViewData["Title"] = "Users"; 

#line default
#line hidden
            BeginContext(84, 2612, true);
            WriteLiteral(@"
<h2>Users</h2>

<table class=""table table-striped table-bordered table-hover"">
    <thead>
        <tr>
            <th scope=""col"">ID</th>
            <th scope=""col"">Name</th>
            <th scope=""col"">Code</th>
            <th scope=""col"">Address</th>
            <th scope=""col"">Discount</th>
            <th scope=""col"">Validated</th>
        </tr>
    </thead>
    <tbody id=""Table""></tbody>
</table>

<div class=""modal fade"" id=""Editor"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""modal-title"">
                    Edit user
                </h3>
            </div>
            <div class=""modal-body"">
                <div class=""form-group"">
                    <label class=""control-label"">ID</label>
                    <input class=""form-control"" id=""ID"" type=""text"" placeholder=""There will be ID"" readonly />
                </div>
                <div class=""form-group"">");
            WriteLiteral(@"
                    <label class=""control-label"">Name</label>
                    <input class=""form-control"" id=""Name"" type=""text"" placeholder=""There will be Name"" />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Code</label>
                    <input class=""form-control"" id=""Code"" type=""text"" placeholder=""There will be Code"" readonly />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Address</label>
                    <input class=""form-control"" id=""Address"" type=""text"" placeholder=""There will be Address"" />
                </div>
                <div class=""form-group"">
                    <label class=""control-label"">Discount</label>
                    <input class=""form-control"" id=""Discount"" type=""text"" placeholder=""There will be Discount"" />
                </div>
                <div class=""form-check"">
                    <input class=""form-check-inp");
            WriteLiteral(@"ut"" type=""checkbox"" id=""CheckVerify"">
                    <label class=""form-check-label"" for=""CheckVerify"">Validated?</label>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" id=""delete"">Delete user</button>
                <button type=""button"" class=""btn btn-primary"" id=""submit"">Save changes</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(2714, 2962, true);
                WriteLiteral(@"
    <script>

        $(""document"").ready(formLoad);

        $(""#submit"").click(formSubmit);
        $(""#delete"").click(formDelete);


        function edit() {
            var caller = $(this);
            var modal = $(""#Editor"");

            $(""#ID"").val($(caller.children()[0]).text());
            $(""#Name"").val($(caller.children()[1]).text());
            $(""#Code"").val($(caller.children()[2]).text());
            $(""#Address"").val($(caller.children()[3]).text());
            $(""#Discount"").val($(caller.children()[4]).text());

            $(""#CheckVerify"").prop('checked', $(caller.children()[5]).text() == ""Validated"");

            modal.modal('toggle');
        }

        function formSubmit() {

            var form = {
                ID: $(""#ID"").val(),
                Name: $(""#Name"").val(),
                Code: $(""#Code"").val(),
                Address: $(""#Address"").val(),
                Discount: Number($(""#Discount"").val()),
                Validated: $(""#Ch");
                WriteLiteral(@"eckVerify"").prop('checked')
            };

            if (form.ID == """" || form.Name == """" || form.Code == """")
            {
                alert(""All fields excluding Address and Discount must be filled!"");
                return false;
            }

            else if ((form.Discount > 100 || form.Discount < 0) || isNaN(form.Discount)) {
                alert(""Invalid discount! Must be between 0 and 100!"");
                return false;
            } else {
                $.ajax({
                    url: ""/controllers/admin/UpdateUser"",
                    method: ""PUT"",
                    contentType: ""application/json"",
                    data: JSON.stringify(form),
                    success: function () { formLoad();}
                });
            }
            $(""#Editor"").modal('toggle');

            
        }

        function formDelete() {
            var ID = $(""#ID"").val();

            $.ajax({
                url: ""/controllers/admin/DeleteUser?id=""+I");
                WriteLiteral(@"D,
                method: ""DELETE"",
                success: (function () { location.reload(); })
            });

            
        }

        function formLoad() {
            $(""#Table"").empty();

            $.ajax({
                url: ""/controllers/admin/GetUsers"",
                dataType: ""json"",
                success: function (result) {
                    for (var i in result)
                    {
                        var a = result[i];
                        var builder = `<td>${a.id}</td><td>${a.name}</td><td>${a.code}</td><td>${a.address}</td><td>${a.discount}</td><td>${a.validated? ""Validated"" : ""Waiting to be validated""}</td>`;
                        $(""#Table"").append(`<tr>${builder}</tr>`);
                    }
                    $(""#Table"").children().on(""click"", edit);
                },
            });            
        }

    </script>
");
                EndContext();
            }
            );
            BeginContext(5677, 1, true);
            WriteLiteral(" ");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TestSite.Pages.Admin.UsersModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TestSite.Pages.Admin.UsersModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TestSite.Pages.Admin.UsersModel>)PageContext?.ViewData;
        public TestSite.Pages.Admin.UsersModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
