#pragma checksum "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Orders.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "04686ed9839a24b4692a4cbc781c76d6a0439c07"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TestSite.Pages.Admin.Pages_Admin_Orders), @"mvc.1.0.razor-page", @"/Pages/Admin/Orders.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Admin/Orders.cshtml", typeof(TestSite.Pages.Admin.Pages_Admin_Orders), null)]
namespace TestSite.Pages.Admin
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using TestSite;

#line default
#line hidden
#line 3 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\_ViewImports.cshtml"
using TestSite.Data;

#line default
#line hidden
#line 4 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Orders.cshtml"
using TestSite.Statics;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"04686ed9839a24b4692a4cbc781c76d6a0439c07", @"/Pages/Admin/Orders.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dc6b36d787dd0b4a1dd3a5b1e7dc018ea14a2c2d", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Admin_Orders : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(48, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(75, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 6 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Orders.cshtml"
  
    ViewData["Title"] = "Orders";

#line default
#line hidden
            BeginContext(119, 139, true);
            WriteLiteral("\r\n<h2>Orders</h2>\r\n\r\n<div class=\"btn-group\" data-toggle=\"buttons\" id=\"Filters\">\r\n    <label class=\"btn btn-primary\"><input type=\"checkbox\">");
            EndContext();
            BeginContext(259, 15, false);
#line 13 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Orders.cshtml"
                                                     Write(OrderStatus.New);

#line default
#line hidden
            EndContext();
            BeginContext(274, 68, true);
            WriteLiteral("</label>\r\n    <label class=\"btn btn-primary\"><input type=\"checkbox\">");
            EndContext();
            BeginContext(343, 22, false);
#line 14 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Orders.cshtml"
                                                     Write(OrderStatus.InProgress);

#line default
#line hidden
            EndContext();
            BeginContext(365, 68, true);
            WriteLiteral("</label>\r\n    <label class=\"btn btn-primary\"><input type=\"checkbox\">");
            EndContext();
            BeginContext(434, 21, false);
#line 15 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Orders.cshtml"
                                                     Write(OrderStatus.Completed);

#line default
#line hidden
            EndContext();
            BeginContext(455, 1621, true);
            WriteLiteral(@"</label>
</div>

<table class=""table table-bordered table-hover"">
    <thead>
        <tr>
            <th scope=""col"">ID</th>
            <th scope=""col"">Customer ID</th>
            <th scope=""col"">Customer Name</th>
            <th scope=""col"">Order Date</th>
            <th scope=""col"">Shipment Date</th>
            <th scope=""col"">Status</th>
        </tr>
    </thead>
    <tbody id=""Table""></tbody>
</table>

<div class=""modal fade"" id=""Info"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""modal-title"">
                    Order detais
                </h3>
            </div>
            <div class=""modal-body"">
                <table class=""table table-bordered"">
                    <thead>
                        <tr>
                            <th scope=""col"">Item ID</th>
                            <th scope=""col"">Item Name</th>
                            <th scope=""c");
            WriteLiteral(@"ol"">Category</th>
                            <th scope=""col"">Amount</th>
                            <th scope=""col"">Price</th>
                        </tr>
                    </thead>
                    <tbody id=""DetailsTable""></tbody>
                </table>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" id=""update"">Update order status</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(2094, 2502, true);
                WriteLiteral(@"
    <script>
        var Orders;

        $(""#Filters"").children().change(UpdateFilters);
        $(""#update"").click(UpdateOrderStatus)

        $(""document"").ready(GetOrders);

        function UpdateFilters() {

            var ActiveFilters = [];
            var buttons = $(this).siblings().addBack();

            for (i = 0; i < buttons.length; i++) {
                if ($(buttons[i]).hasClass(""active"")) {
                    ActiveFilters.push($(buttons[i]).text());
                }
            }

            UpdateOrders(ActiveFilters);
        };

        function GetOrders() {

            $.ajax({
                url: ""/controllers/admin/GetOrders"",
                success: function (result) {
                    Orders = result;
                    UpdateOrders();
                }
            });
        }

        function UpdateOrders(filters) {
            var Table = $(""#Table"");
            Table.empty();
            var filtered;

            if (filte");
                WriteLiteral(@"rs != null && filters.length != 0) filtered = Orders.filter(function (i) { return filters.includes(i.status); });
            else filtered = Orders;

            for (var i in filtered) {
                var a = filtered[i];
                var builder = `<td>${a.id}</td><td>${a.customer_ID}</td><td>${a.customer_name}</td><td>${a.order_Date}</td><td>${a.shipment_Date == null ? ""Not delivered yet"" : a.shipment_Date}</td><td>${a.status}</td>`;
                $(""#Table"").append(`<tr>${builder}</tr>`);
            }

            $(""#Table"").children().click(ShowDetails);
        }

        function ShowDetails() {
            var trigger = $(this);

            $.ajax({
                url: ""/controllers/admin/GetOrderElements?id="" + $(trigger.children()[0]).text(),
                success: function (result) {
                    $(""#DetailsTable"").empty();

                    for (var i in result) {
                        var a = result[i];
                        var builder = `<td>${a");
                WriteLiteral(@".item_ID}</td><td>${a.itemName}</td><td>${a.category}</td><td>${a.items_Count}</td><td>${a.item_Price} $</td><input type=""hidden"" value=""${$(trigger.children()[0]).text()}""/>`;
                        $(""#DetailsTable"").append(`<tr>${builder}</tr>`);
                    }
                    $(""#DetailsTable"").append(`<input type=""hidden"" value=""${trigger.children(""input"").val()}""/>`)

                    if ($(trigger.children()[5]).text() == """);
                EndContext();
                BeginContext(4597, 21, false);
#line 128 "C:\Users\Di1997\Source\Repos\TestSite\TestSite\Pages\Admin\Orders.cshtml"
                                                       Write(OrderStatus.Completed);

#line default
#line hidden
                EndContext();
                BeginContext(4618, 544, true);
                WriteLiteral(@""") { $(""#update"").hide(); } else { $(""#update"").show(); }

                    $(""#Info"").modal(""show"");
                }
            });
        }

        function UpdateOrderStatus() {

            $.ajax({
                url: ""/controllers/admin/UpdateOrderStatus?id="" + $(""#DetailsTable input:hidden"").val(),
                method: ""PUT"",
                success: function () {
                    GetOrders();
                    $(""#Info"").modal(""hide"");
                }
            });
        }

    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TestSite.Pages.Admin.OrdersModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TestSite.Pages.Admin.OrdersModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TestSite.Pages.Admin.OrdersModel>)PageContext?.ViewData;
        public TestSite.Pages.Admin.OrdersModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
